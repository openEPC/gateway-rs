on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: ["v*"]

name: ci

jobs:
  build:
    name: hygiene
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get install -y libtss2-dev

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true
          components: clippy, rustfmt

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Check formatting
        run: cargo fmt  -- --check

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -Dclippy::all

  package:
    name: package
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - klkgw
          - ramips_24kec
          - smartharvest
          - dragino
          - mtcdt
          - raspi01
          - raspi234
          - resiot
          - x86_64
          - freedomfi
          - cotx
          - raspi_64
          - cloudgate
          - caldigit
          - tektelic
          - risinghf
          - clodpi
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: davidB/rust-cargo-make@v1
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get install -y libtss2-dev llvm-dev libclang-dev clang

      - name: install cross
        uses: jaxxstorm/action-install-gh-release@release/v1-alpha
        env:
          ## Allow cross install into PATH
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo: rust-embedded/cross

      - name: install cargo-deb
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-deb

      - name: build package
        run: RUST_BACKTRACE=1 LIBCLANG_PATH="/usr/lib/llvm-14/lib/" cargo make --profile ${{ matrix.target }} pkg

      - name: name release
        if: startsWith(github.ref, 'refs/tags')
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Release ${{ steps.vars.outputs.tag }}
          files: target/pkg/helium-gateway-${{ steps.vars.outputs.tag }}-${{ matrix.target }}.*
